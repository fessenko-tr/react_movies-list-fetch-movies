{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","concat","then","res","json","catch","Response","Error","FindMovie","onMovieAdd","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","setMovie","_useState5","_useState6","isError","setIsError","_useState7","_useState8","isLoading","setIsLoading","handleFormSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","wrap","_context","prev","next","preventDefault","sent","abrupt","Title","Plot","Poster","imdbID","stop","_x","apply","arguments","_Fragment","onSubmit","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","trim","onClick","App","setMovies","newMovie","some","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d7b9ec0.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=fabffcfb';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\nconst PLACEHOLDER_POSTER\n  = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nconst IMDB_URL = 'https://www.imdb.com/title/';\n\ntype Props = {\n  onMovieAdd: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onMovieAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setIsError(false);\n    setQuery(e.target.value);\n  };\n\n  const handleAddToTheList = () => {\n    if (movie) {\n      onMovieAdd(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  };\n\n  const handleFormSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsLoading(true);\n    const response = await getMovie(query);\n\n    if ('Error' in response) {\n      setIsError(true);\n      setIsLoading(false);\n\n      return;\n    }\n\n    setMovie({\n      title: response.Title,\n      description: response.Plot,\n      imgUrl: response.Poster === 'N/A' ? PLACEHOLDER_POSTER : response.Poster,\n      imdbUrl: IMDB_URL + response.imdbID,\n      imdbId: response.imdbID,\n    });\n\n    setIsLoading(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleFormSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': isError,\n              })}\n              value={query}\n              onChange={handleQueryChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!query.trim()}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddToTheList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onMovieAdd = (newMovie: Movie) => {\n    if (movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onMovieAdd={onMovieAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}